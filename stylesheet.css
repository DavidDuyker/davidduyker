/* _______________ VARIABLES _________________ */

:root {
  --text: #000000;
  --text-secondary: #2a2a2a;
  --text-underline: #d7d7d7;
  --hover-background: hsl(202deg 100% 48.37% / 17%);
  --hover-background-light: hsl(202deg 100% 48.37% / 8%);
  --hover-corners: #00000088;
  --background: #f2f2f2;
  --background-secondary: #d6d6d6;
  --divider: #00000016;
  --outline: #00000054;

  --width-text: 38rem;
  --width-content: 60rem;
  --text-size: clamp(1rem, 0.85rem + 0.7vw, 1.1rem);
  --text-size-modify-large: 1.5;
}

@media (prefers-color-scheme: dark) {
  :root {
    --text: #ffffff;
    --text-secondary: #dbdbdb;
    --text-underline: #383838;
    --hover-background: hsla(202, 50%, 27%, 0.915);
    --hover-background-light: hsla(202, 50%, 27%, 0.5);
    --hover-corners: #aaaaaa;
    --background: #090909;
    --background-secondary: #333333;
    --divider: #686868;
    --outline: #0c0c0c82;
  }
}

/* CSS Reset */

/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

body {
  /* 3. Add accessible line-height */
  line-height: 1.5;
  /* 4. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 5. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 6. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 7. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 8. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* ________________________________________________________________ */

body {
  font-family: "rubik", Helvetica, sans-serif;
  color: var(--text-secondary);
  background-color: var(--background);
  transition-duration: 150ms;
  padding: 24px;
}

.texture {
  position: fixed;
  z-index: -100;
  inset: 0;
  mix-blend-mode: luminosity;
  opacity: 100%;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='fixed top-0 left-0 w-full h-full pointer-events-none'%3E%3Cfilter id='noise-filter-bg'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3CfeColorMatrix type='saturate' values='0'%3E%3C/feColorMatrix%3E%3CfeComponentTransfer%3E%3CfeFuncR type='linear' slope='0.7'%3E%3C/feFuncR%3E%3CfeFuncG type='linear' slope='0.7'%3E%3C/feFuncG%3E%3CfeFuncB type='linear' slope='0.7'%3E%3C/feFuncB%3E%3CfeFuncA type='linear' slope='0.25'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeComponentTransfer%3E%3CfeFuncR type='linear' slope='0.3' intercept='0.35'%3E%3C/feFuncR%3E%3CfeFuncG type='linear' slope='0.3' intercept='0.35'%3E%3C/feFuncG%3E%3CfeFuncB type='linear' slope='0.3' intercept='0.35'%3E%3C/feFuncB%3E%3C/feComponentTransfer%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise-filter-bg)'%3E%3C/rect%3E%3C/svg%3E");
  pointer-events: none;
}

.content-flow {
  margin: 144px auto;
  width: 100%;
  max-width: var(--width-content);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 7rem;
}

.section {
  margin: auto;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
}

.width-text {
  max-width: var(--width-text);
}

.header {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

hr {
  max-width: 5rem;
  border: none;
  height: 2px;
  background-color: var(--divider);
  width: 100%;
}

/* _______  Typeography   _____________ */

h1 {
  font-family: "Rubik Mono One", Helvetica, sans-serif;
  font-size: calc(var(--text-size) * var(--text-size-modify-large));
  color: var(--text);
}

h2 {
  font-family: "Rubik Mono One", Helvetica, sans-serif;
  font-size: var(--text-size);
  color: var(--text);
}

h3 {
  font-size: var(--text-size);
  color: var(--text);
}

p,
ul {
  font-size: var(--text-size);
}

a {
  color: var(--text);
  padding: 0.125rem 0.25rem;
  margin: -0.125rem -0.25rem;
  transition-duration: 150ms;
  transition: text-decoration-color 0ms;
  text-decoration-color: var(--text-underline);
  text-decoration-thickness: 2px;
  text-underline-offset: 2px;
  text-decoration-skip-ink: auto;
}

a:focus {
  outline-offset: 3px;
  outline: 2px solid var(--hover-corners);
}

a:hover, a:focus {
  border-radius: 4px;
  text-decoration-thickness: 1px;
  text-decoration-color: var(--hover-corners);
  background-color: var(--hover-background-light);
}

.open-new::after {
  content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 256 256'%3E%3Cpath d='M200,64V168a8,8,0,0,1-16,0V83.31L69.66,197.66a8,8,0,0,1-11.32-11.32L172.69,72H88a8,8,0,0,1,0-16H192A8,8,0,0,1,200,64Z'%3E%3C/path%3E%3C/svg%3E");
}

@media (prefers-color-scheme: dark) {
  .open-new::after {
    content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='white' viewBox='0 0 256 256'%3E%3Cpath d='M200,64V168a8,8,0,0,1-16,0V83.31L69.66,197.66a8,8,0,0,1-11.32-11.32L172.69,72H88a8,8,0,0,1,0-16H192A8,8,0,0,1,200,64Z'%3E%3C/path%3E%3C/svg%3E");
  }
}

.inline-link {
  padding: 0rem 0.1rem;
  margin: 0rem -0.1rem;
}

.inline-link:hover {
  text-decoration: none;
  background-color: var(--hover-background);
}

.inline-link span {
  display: none;
}

ul {
  padding-left: 2ch;
}

.chip {
  padding: 5px 8px 4px 8px;
  border-radius: 0.4rem;
  background-color: var(--background-secondary);
  height: fit-content;
  text-wrap: nowrap;
  text-transform: uppercase;
  font-size: calc(var(--text-size) * 0.8);
  line-height: 1;
}

.chip-bag {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 0.6rem;
  flex: 0 2 auto;
  justify-content: flex-end;
}

#plugin iframe {
  border: 1px solid var(--divider);
  border-radius: 12px;
}

/* _______  Introduction  ___________ */
.title-lockup {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1.8rem;
}

.title-lockup > * {
  flex: 0 0 auto;
}

.profile-image {
  position: relative;
}

.profile-image img {
  width: calc(var(--text-size) * 4.5);
  /* height: 72px; */
  border: solid 1px var(--outline);
  border-radius: 8px;
  filter: drop-shadow(0px 4px 2px #00000019);
  transform-origin: bottom;
  transform: rotate(0deg);
  transition-duration: 300ms;
}

.animate-profile-img-speed img, .animate-profile-img-speed p {
  transition-duration: 500ms !important;
}

.profile-image:hover img, .animate-profile-img img {
  transform: rotate(8deg) translateX(8px) translateY(1px);
  filter: drop-shadow(1px 4px 4px #00000019);
}

.profile-image p {
  font-family: Courier, monospace;
  font-size: 1.3rem;
  position: absolute;
  top: 16px;
  left: 0px;
  z-index: -1;
  transform: rotate(5deg);
  transition-duration: 150ms;
}

.profile-image:hover p, .animate-profile-img p {
  left: -24px;
  transform: rotate(-12deg);
  top: 16px;
}

.title-lockup > div {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.title-text {
  flex-grow: 1;
}

.tag-line {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: wrap;
  gap: 1ch;
}

.tag-line .spin {
  transition-property: transform;
  transition-duration: 10s;
  position: relative;
  width: 1.2rem;
  cursor: default;
}

.tag-line .spin:hover {
  transform: rotate(6800deg);
}

.whoa {
  position: fixed;
  bottom: -260px;
  left: 40%;
  height: 200px;
  transition-duration: 8s;
  z-index: 1000;
}

.spin:hover + .whoa {
  bottom: 0;
}

.intro-paragraph {
  display: flex;
  flex-direction: column;
  gap: 1.8rem;
}

/* _______ Experience ________ */
.job-entry {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 1rem;
}

.date-range {
  flex-grow: 1;
  text-wrap: nowrap;
}

.job-entry > div {
  flex-basis: 28rem;
  flex-grow: 0;
  display: flex;
  flex-direction: column;
}

/* __________ Projects __________ */
#projects {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3rem;
}

.project {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
  width: 100%;
}

.project > img {
  border: solid 1px var(--outline);
  border-radius: 12px;
  filter: drop-shadow(0px 4px 2px #00000011);
}

.project > div {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.project-title {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

#zoomFrame {
  position: relative;
  border: solid 1px var(--outline);
  border-radius: 12px;
  filter: drop-shadow(0px 4px 2px #00000011);
  overflow: hidden;
  background-color: #fff;
  background: radial-gradient(
    bottom,
    rgba(16, 115, 235, 0.0673) 0%,
    rgba(16, 115, 235, 0) 100%
  );
  background-position: 0px 0px;
}

#zoomFrame .DSgrid {
  position: absolute;
  top: 0;
  left: 0;
  z-index: -100;
  opacity: 0.7;
}

.DSitems {
  filter: drop-shadow(0px 4px 4px hsla(0, 0%, 0%, 0.06));
}

#zoomFrame::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -100;
  mix-blend-mode: luminosity;
  opacity: 50%;
  background: url("data:image/svg+xml,%3Csvg viewBox=%270 0 369 369%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cfilter id=%27noiseFilter%27%3E%3CfeTurbulence type=%27fractalNoise%27 baseFrequency=%271.5%27 numOctaves=%273%27 stitchTiles=%27stitch%27/%3E%3C/filter%3E%3Crect width=%27100%25%27 height=%27100%25%27 filter=%27url(%23noiseFilter)%27/%3E%3C/svg%3E");
  pointer-events: none;
}

/* color Contrast plugin try me */

.project .try-it {
  border: none;
  position: absolute;
  left: 0;
  top: 25%;
  margin-left: -118px;
}

@media (width < calc(60rem + 244px)) {
  .try-it {
    display: none;
  }
}

/* _______ Links _________ */

#links a {
  color: var(--text-secondary);
}

/* ___________ button/link corners ?__________*/

a {
  position: relative;
}

.CornerLinesWrapper {
  position: absolute;
  top: -2px;
  left: -2px;
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  pointer-events: none;
  opacity: 0;
  transition-duration: 350ms;
}

a:hover .CornerLinesWrapper, a:focus .CornerLinesWrapper {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 1;
}

.CornerLinesWrapper span {
  position: absolute;
  border: solid 1px var(--hover-corners);
  width: 8px;
  height: 8px;
}

span.CornerLinesTopLeft {
  top: -1px;
  left: -1px;
  border-bottom: none;
  border-right: none;
  border-top-left-radius: 4px;
}

span.CornerLinesTopRight {
  top: -1px;
  right: -1px;
  border-bottom: none;
  border-left: none;
  border-top-right-radius: 4px;
}

span.CornerLinesBottomLeft {
  bottom: -1px;
  left: -1px;
  border-top: none;
  border-right: none;
  border-bottom-left-radius: 4px;
}

span.CornerLinesBottomRight {
  bottom: -1px;
  right: -1px;
  border-top: none;
  border-left: none;
  border-bottom-right-radius: 4px;
}
